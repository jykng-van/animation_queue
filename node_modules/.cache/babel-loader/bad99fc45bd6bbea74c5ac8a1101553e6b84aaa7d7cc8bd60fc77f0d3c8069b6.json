{"ast":null,"code":"import anime from 'animejs';\nexport default class Animation {\n  //if the animation is done or not\n\n  constructor() {\n    this.animatedRegions = {};\n    //scroll regions for animations\n    this.specialAnimations = {};\n    //collections of special animations: SVG attribute changes and the Pie Reveal animation\n    this.observer = null;\n    //observer class for the scrolling triggers\n    this.animatedElements = {};\n    //elements (by selectors) and their scripted animations\n    this.initializedElements = [];\n    //elements that were changed on Start\n    this.animationStep = 0;\n    //current animation step number\n    this.animationDelay = 0;\n    //culumative animation delay with each step\n    this.animationDone = false;\n    console.log('Animation class constructed');\n  }\n  async Prepare(animations, initialState, container, scrollarea = null) {\n    //get regions\n    if (this.observer != null) {\n      this.observer.disconnect();\n    }\n    this.animatedRegions = {};\n    animations.forEach(r => {\n      let start_obj = {\n        animationStep: 0,\n        animationDelay: 0\n      };\n      if (r.trigger) {\n        console.log(r);\n        this.animatedRegions[r.trigger] = Object.assign(start_obj, r);\n      } else {\n        this.animatedRegions.default = Object.assign(start_obj, r);\n      }\n    });\n    console.log('prepareAnimation!!');\n    console.log(this.animatedRegions);\n    await this.Start(initialState);\n    let target = document.querySelector(scrollarea);\n    console.log(target);\n    console.log(this.animatedRegions.default !== null, Object.entries(this.animatedRegions).length === 1);\n    if (this.animatedRegions.default !== null && Object.entries(this.animatedRegions).length === 1) {\n      console.log('default animation!');\n      this.Animate('default');\n    } else {\n      console.log('Not default', Object.keys(this.animatedRegions));\n      let opt = {\n        root: document.querySelector(container),\n        threshold: Array.from({\n          length: 21\n        }, (x, i) => i / 20)\n      };\n      let regions = [];\n      this.observer = new IntersectionObserver(entries => {\n        entries.forEach(e => {\n          if (e.isIntersecting) {\n            let target = regions.find(n => n.el === e.target);\n            if (!target.triggered && e.intersectionRatio >= target.threshold) {\n              console.log('observer entry', e.intersectionRatio, target.selector, target.threshold);\n              console.log(`${target.selector} threshold start animation!`);\n              this.Animate(target.selector);\n              target.triggered = true;\n            }\n          }\n        });\n      }, opt);\n      Object.entries(this.animatedRegions).forEach(([k, val]) => {\n        console.log(k, val);\n        if (k !== 'default') {\n          let entry = document.querySelector(k);\n          regions.push({\n            el: entry,\n            selector: k,\n            threshold: val.threshold,\n            triggered: false\n          });\n          this.observer.observe(entry);\n        }\n      });\n      console.log(this.animatedRegions);\n      console.log(regions);\n    }\n  }\n  async Start(initialState) {\n    this.animationDone = false;\n    this.clearStyles(); //clear the styles and restart animatedElements\n\n    console.log('Start!');\n    console.log(initialState);\n    for (let n in initialState) {\n      //for each grouping of initialized Elements\n      let element = initialState[n];\n      let selector = element.selector;\n      let selected = Array.from(document.querySelectorAll(selector)); //all elements selected\n      console.log(selected);\n      let start_styles = element.style.trim().split(/;\\s?/);\n      for (let s of start_styles) {\n        //for each starting style of the elements\n        if (!s) continue;\n        let [style_prop, style_val] = s.split(/:\\s?/);\n        style_prop = style_prop.toLowerCase();\n        console.log(style_prop, style_val);\n        for (let el of selected) {\n          //each selected element\n          console.log(el);\n          let is_svg = el instanceof SVGElement; //will also include <svg></svg>\n          let svgprops = ['d', 'points', 'x', 'y', 'x1', 'y1', 'x2', 'y2', 'cx', 'cy', 'r', 'rx', 'ry', 'width', 'height', 'transform', 'stroke'];\n          //not an exhaustive list of svg attributes that might be used\n\n          if (style_prop === 'stroke-dashoffset' && is_svg) {\n            //stroke-dashoffset is a special case, but we only care about going none to line fully drawn\n            console.log('stroke-dashoffset');\n            let length = el.getTotalLength() + Number(el.getAttribute('stroke-width'));\n            console.log(length);\n            style_val = length;\n            el.style.setProperty('stroke-dasharray', length + ' ' + length);\n          } else if (style_prop === 'pie') {\n            //set pie reveal start\n            this.startPie(el.id);\n            let angles = style_val.split(/\\s+/);\n            this.specialAnimations[el.id].startAngle = Number(angles[0]);\n            this.specialAnimations[el.id].endAngle = Number(angles[1]);\n            console.log(el.id, angles[0], angles[1]);\n            this.setPie(el.id);\n          }\n          //setting SVG attributes here\n          if (is_svg && el.tagName !== 'svg' && svgprops.includes(style_prop)) {\n            let original = `${style_prop}:${el.getAttribute(style_prop)}`; //preserve original\n            el.setAttribute(style_prop, style_val);\n            if (!this.specialAnimations[el.id]) {\n              this.specialAnimations[el.id] = {\n                original: [original]\n              };\n            } else {\n              this.specialAnimations[el.id].original.push(original);\n            }\n            console.log('specialAnimations', this.specialAnimations[el.id]);\n          } else {\n            el.style.setProperty(style_prop, style_val);\n          }\n          this.initializedElements.push(el);\n        }\n      }\n    }\n  }\n  Animate(regionname) {\n    console.log('Animate!', regionname);\n    let region = this.animatedRegions[regionname];\n    if (!region) return;\n    console.log(regionname, region);\n    console.log(region.animationStep);\n    if (region.animationStep > 0) {\n      let prevstep = region.steps[region.animationStep - 1];\n      region.animationDelay += this.cssTimeToMS(prevstep && prevstep.duration || 0) + (prevstep && prevstep.offset ? this.cssTimeToMS(prevstep.offset) : 0);\n    }\n    if (region.steps.length) {\n      let commands = region.steps[region.animationStep];\n      console.log(commands);\n      let elements = commands ? commands.elements || [] : [];\n      let duration = commands ? this.cssTimeToMS(commands.duration) : 0;\n      let timing = commands ? commands.timing || 'linear' : 'linear';\n      let stepoffset = commands && commands.offset ? this.cssTimeToMS(commands.offset) : 0;\n      for (var n in elements) {\n        let styles = this.stylestringToObj(elements[n].style, true) || {};\n        console.log(styles);\n        let selector = elements[n].selector;\n        let el = elements[n];\n\n        //let selected = Array.from(document.querySelectorAll(elements[n].selector));\n        let substeps = elements[n].substeps;\n        console.log(selector);\n\n        //animeJS\n        if (!this.animatedElements[selector]) {\n          this.animatedElements[selector] = [];\n        }\n        let step = {\n          duration,\n          offset: region.animationDelay + stepoffset,\n          //absolute offset, kept here to be in the loop\n          easing: timing\n        };\n        if (substeps) {\n          //substeps is for staggered delay animations\n          step.delay = (el, i, l) => i * duration / substeps;\n          step.duration = duration / substeps;\n        }\n        console.log(this.specialAnimations);\n        if (styles['pie']) {\n          //pie, because it's a special animation\n          console.log('pie!', el.selector);\n          let pies = Array.from(document.querySelectorAll(el.selector));\n          step.targets = [];\n          pies.forEach((p, n) => {\n            let id = p.id;\n            console.log(id, this.specialAnimations[id]);\n            step.targets.push(this.specialAnimations[id]);\n          });\n          let angles = styles['pie'].split(' ');\n          step.startAngle = Number(angles[0]);\n          step.endAngle = Number(angles[1]);\n          console.log('startAngle', step.startAngle, 'endAngle', step.endAngle);\n          step.update = () => {\n            //custom function for anime JS\n            console.log('step.update', step.startAngle, step.endAngle);\n            let pies = Array.from(document.querySelectorAll(el.selector));\n            pies.forEach(p => {\n              let id = p.id;\n              if (this.specialAnimations[id]) this.setPie(id);\n            });\n          };\n          delete styles['pie'];\n          step = Object.assign(step, styles);\n          console.log(step);\n          this.animatedElements[selector].push(step);\n        }\n        for (let s in styles) {\n          console.log(styles[s]);\n          if (styles[s] === 'original' && this.specialAnimations) {\n            //this was for things drawn by generated svg\n            console.log('ORIGINAL SVG!');\n            let selected = Array.from(document.querySelectorAll(elements[n].selector));\n            selected.forEach((sel, n) => {\n              let id = sel.id;\n              console.log(id);\n              if (this.specialAnimations[id] && this.specialAnimations[id].original) {\n                styles[s] = this.specialAnimations[id].original;\n              }\n            });\n          }\n        }\n        console.log(styles);\n        step = Object.assign(step, styles);\n        this.animatedElements[selector].push(step);\n      }\n      region.animationStep++;\n      console.log(region.animationStep, region.steps.length);\n      console.log('step:', region.animationStep, 'total steps:', region.steps.length);\n      if (region.animationStep < region.steps.length) {\n        this.Animate(regionname);\n      } else if (region.animationStep === region.steps.length) {\n        //prevent double animation\n        this.executeAnimationTimeline();\n      } else {\n        console.log('Not Animating step:', region.animationStep, 'total steps:', region.steps.length);\n      }\n    }\n  }\n  executeAnimationTimeline() {\n    //animeJS\n    console.log('start anime timeline');\n    let timeline = anime.timeline({\n      complete: anim => this.animationDone = true\n    });\n    console.log(this.animatedElements);\n    for (let e in this.animatedElements) {\n      let selector_steps = this.animatedElements[e];\n      console.log(selector_steps);\n      for (let s in selector_steps) {\n        let step = selector_steps[s];\n        if (!step.targets) step.targets = e;\n        console.log(step, step.offset);\n        try {\n          timeline = timeline.add(step, step.offset);\n        } catch (ex) {\n          console.log(ex.message);\n        }\n      }\n    }\n    console.log(timeline);\n  }\n  cssTimeToMS(time) {\n    if (time && time.match(/s$/)) {\n      //seconds\n      return parseFloat(time) * 1000;\n    } else {\n      return parseInt(time);\n    }\n  }\n  stylestringToObj(styles, camelCase) {\n    let obj = {};\n    if (typeof styles == 'string') {\n      let rules = styles.trim().split(/;\\s?/);\n      for (var r in rules) {\n        let rule = rules[r];\n        if (rule) {\n          let parts = rule.split(/\\s?:\\s?/);\n          console.log(parts);\n          let prop = parts[0].trim();\n          if (camelCase) prop = this.toCamelCase(prop);\n          if (parts.length === 2) obj[prop] = parts[1].trim();\n        }\n      }\n      styles = obj;\n    }\n    return styles;\n  }\n  toCamelCase(str) {\n    return str.replace(/-([a-z])/g, g => g[1].toUpperCase());\n  }\n  //clear the style properties from elements\n  clearStyles() {\n    console.log('clearStyles animatedElements', this.animatedElements);\n    for (let sel in this.animatedElements) {\n      let elements = Array.from(document.querySelectorAll(sel));\n      for (let el of elements) {\n        console.log('clearing', el);\n        el.removeAttribute('style');\n      }\n    }\n    this.animatedElements = {};\n    console.log('clearStyles initializedElements', this.initializedElements);\n    for (let el of this.initializedElements) {\n      el.removeAttribute('style');\n    }\n    console.log('clearStyles specialAnimations', this.specialAnimations);\n    //restore originals svg attributes\n    for (let id in this.specialAnimations) {\n      let el = document.getElementById(id);\n      if (this.specialAnimations[id] && this.specialAnimations[id].original) {\n        for (let s of this.specialAnimations[id].original) {\n          let [attr, val] = s.split(':');\n          el.setAttribute(attr, val);\n        }\n      }\n    }\n    this.specialAnimations = {};\n  }\n  //setup for the \"pie\" animation\n  startPie(id) {\n    console.log('starting pie');\n    let element = document.getElementById(id);\n    if (element) {\n      let dims;\n      let is_svg = element instanceof SVGElement && element.tagName !== 'svg';\n      if (is_svg) {\n        console.log('svg element');\n        if (element.querySelector('clipPath')) {\n          dims = element.querySelector('clipPath').getBBox();\n          //TODO the parameter {stroke:true} whenever most browsers except parameters fro getBBox\n        } else {\n          dims = element.getBBox();\n        }\n      } else {\n        console.log('not svg element');\n        dims = element.getBoundingClientRect();\n      }\n      console.log('Dimensions', dims);\n      let width = dims.width;\n      let height = dims.height;\n      if (is_svg && element.getAttribute('stroke-width')) {\n        //because stroke-width throws off the real dimensions\n        width += Number(element.getAttribute('stroke-width')) * 3;\n        height += Number(element.getAttribute('stroke-width')) * 3;\n      }\n      console.log('Width', width, 'Height', height);\n      let center = {\n        x: width / 2,\n        y: height / 2\n      };\n      let radius = Math.sqrt(Math.pow(center.x, 2) + Math.pow(center.y, 2));\n      if (!this.specialAnimations[id]) this.specialAnimations[id] = {};\n      console.log(center, radius);\n      this.specialAnimations[id].center = center;\n      this.specialAnimations[id].radius = radius;\n      this.specialAnimations[id].startAngle = 0;\n      this.specialAnimations[id].endAngle = 0;\n      console.log('specialAnimations', id, this.specialAnimations);\n      //arc\n      let path = this.drawPie(center.x, center.y, radius, 0, 0);\n      //element.style.clipPath = `path('${path}')`;\n      element.style.setProperty('clip-path', `path('${path}')`);\n      console.log(element);\n    }\n  }\n  //sets the values for the pie animation clip-path\n  setPie(id) {\n    //console.log('setPie');\n    let center = this.specialAnimations[id].center;\n    let radius = this.specialAnimations[id].radius;\n    let start = this.specialAnimations[id].startAngle;\n    let end = this.specialAnimations[id].endAngle;\n    //console.log(id, start, end);\n    try {\n      let path = this.drawPie(center.x, center.y, radius, start, end);\n      document.getElementById(id).style.setProperty('clip-path', `path('${path}')`);\n    } catch (ex) {\n      console.log(ex.message);\n    }\n  }\n  //gets the values for the path properties for \"pie\" animation\n  drawPie(x, y, radius, startAngle, endAngle) {\n    var arc = this.arcValues(x, y, radius, startAngle, endAngle);\n    var d = [\"M\", x, y, \"L\", arc.start.x, arc.start.y, \"A\", radius, radius, 0, arc.largeArcFlag, 1, arc.start2.x, arc.start2.y, \"A\", radius, radius, 0, arc.largeArcFlag, 1, arc.end.x, arc.end.y, \"Z\"].join(\" \");\n    //console.log(startAngle, endAngle, d);\n    return d;\n  }\n  //does the calculation for an arc path in \"pie\" animation\n  arcValues(x, y, radius, startAngle, endAngle) {\n    if (startAngle > endAngle) {\n      let tempAngle = startAngle;\n      startAngle = endAngle;\n      endAngle = tempAngle;\n    }\n    if (startAngle >= 360) {\n      let times = Math.floor(startAngle / 360);\n      startAngle -= times * 360;\n      endAngle -= times * 360;\n    }\n    let arcAngle = endAngle - startAngle;\n    if (arcAngle > 360) {\n      let times = Math.floor(arcAngle / 360);\n      endAngle -= times * 360;\n      arcAngle -= times * 360;\n    }\n\n    //half arcs needed because it won't draw 360\n    var start = this.polarToCartesian(x, y, radius, startAngle);\n    var start2 = this.polarToCartesian(x, y, radius, (endAngle + startAngle) / 2);\n    var end = this.polarToCartesian(x, y, radius, endAngle > 360 ? endAngle - 360 : endAngle);\n    var largeArcFlag = arcAngle / 2 <= 180 ? \"0\" : \"1\";\n    return {\n      start,\n      start2,\n      end,\n      largeArcFlag\n    };\n  }\n  //converts polar to cartesian\n  polarToCartesian(centerX, centerY, radius, angleInDegrees) {\n    var angleInRadians = this.radians(angleInDegrees - 90);\n    return {\n      x: centerX + radius * Math.cos(angleInRadians),\n      y: centerY + radius * Math.sin(angleInRadians)\n    };\n  }\n  //converts degree angles to radians\n  radians(deg) {\n    return deg * Math.PI / 180.0;\n  }\n}","map":{"version":3,"names":["anime","Animation","constructor","animatedRegions","specialAnimations","observer","animatedElements","initializedElements","animationStep","animationDelay","animationDone","console","log","Prepare","animations","initialState","container","scrollarea","disconnect","forEach","r","start_obj","trigger","Object","assign","default","Start","target","document","querySelector","entries","length","Animate","keys","opt","root","threshold","Array","from","x","i","regions","IntersectionObserver","e","isIntersecting","find","n","el","triggered","intersectionRatio","selector","k","val","entry","push","observe","clearStyles","element","selected","querySelectorAll","start_styles","style","trim","split","s","style_prop","style_val","toLowerCase","is_svg","SVGElement","svgprops","getTotalLength","Number","getAttribute","setProperty","startPie","id","angles","startAngle","endAngle","setPie","tagName","includes","original","setAttribute","regionname","region","prevstep","steps","cssTimeToMS","duration","offset","commands","elements","timing","stepoffset","styles","stylestringToObj","substeps","step","easing","delay","l","pies","targets","p","update","sel","executeAnimationTimeline","timeline","complete","anim","selector_steps","add","ex","message","time","match","parseFloat","parseInt","camelCase","obj","rules","rule","parts","prop","toCamelCase","str","replace","g","toUpperCase","removeAttribute","getElementById","attr","dims","getBBox","getBoundingClientRect","width","height","center","y","radius","Math","sqrt","pow","path","drawPie","start","end","arc","arcValues","d","largeArcFlag","start2","join","tempAngle","times","floor","arcAngle","polarToCartesian","centerX","centerY","angleInDegrees","angleInRadians","radians","cos","sin","deg","PI"],"sources":["C:/Users/Jason/projects/animation_queue/src/animation.js"],"sourcesContent":["import anime from 'animejs';\n\nexport default class Animation{\n\tanimatedRegions = {}; //scroll regions for animations\n\tspecialAnimations = {}; //collections of special animations: SVG attribute changes and the Pie Reveal animation\n\n\tobserver = null; //observer class for the scrolling triggers\n\n\tanimatedElements = {}; //elements (by selectors) and their scripted animations\n\tinitializedElements = []; //elements that were changed on Start\n\tanimationStep =  0; //current animation step number\n\tanimationDelay = 0; //culumative animation delay with each step\n\n\tanimationDone = false; //if the animation is done or not\n\n\n\tconstructor(){\n\t\tconsole.log('Animation class constructed');\n\t}\n\tasync Prepare(animations, initialState, container, scrollarea=null){\n\t\t//get regions\n\t\tif(this.observer != null){\n\t\t\tthis.observer.disconnect();\n\t\t}\n\t\tthis.animatedRegions = {};\n\t\tanimations.forEach(r=>{\n\t\t\tlet start_obj = {\n\t\t\t\tanimationStep:0,\n\t\t\t\tanimationDelay:0,\n\t\t\t};\n\n\t\t\tif (r.trigger){\n\t\t\t\tconsole.log(r);\n\t\t\t\tthis.animatedRegions[r.trigger] = Object.assign(start_obj, r);\n\t\t\t}else{\n\t\t\t\tthis.animatedRegions.default = Object.assign(start_obj, r);\n\t\t\t}\n\t\t});\n\n\t\tconsole.log('prepareAnimation!!');\n\t\tconsole.log(this.animatedRegions);\n\t\tawait this.Start(initialState);\n\n\t\tlet target = document.querySelector(scrollarea);\n\t\tconsole.log(target);\n\n\t\tconsole.log(this.animatedRegions.default!==null, Object.entries(this.animatedRegions).length===1);\n\t\tif (this.animatedRegions.default!==null && Object.entries(this.animatedRegions).length===1){\n\t\t\tconsole.log('default animation!');\n\t\t\tthis.Animate('default');\n\t\t}else{\n\t\t\tconsole.log('Not default', Object.keys(this.animatedRegions));\n\t\t\tlet opt = {\n\t\t\t\troot: document.querySelector(container),\n\t\t\t\tthreshold: Array.from({length:21},(x,i)=>i/20),\n\t\t\t};\n\t\t\tlet regions = [];\n\t\t\tthis.observer = new IntersectionObserver(\n\t\t\t\t(entries)=>{\n\t\t\t\t\tentries.forEach(e=>{\n\t\t\t\t\t\tif (e.isIntersecting){\n\t\t\t\t\t\t\tlet target = regions.find(n=>n.el === e.target);\n\n\t\t\t\t\t\t\tif (!target.triggered && e.intersectionRatio >= target.threshold){\n\t\t\t\t\t\t\t\tconsole.log('observer entry', e.intersectionRatio, target.selector, target.threshold);\n\n\t\t\t\t\t\t\t\tconsole.log(`${target.selector} threshold start animation!`);\n\t\t\t\t\t\t\t\tthis.Animate(target.selector);\n\t\t\t\t\t\t\t\ttarget.triggered = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t},\n\t\t\t\topt\n\t\t\t);\n\n\n\t\t\tObject.entries(this.animatedRegions).forEach(([k,val])=>{\n\t\t\t\tconsole.log(k, val);\n\t\t\t\tif (k !== 'default'){\n\t\t\t\t\tlet entry = document.querySelector(k);\n\t\t\t\t\tregions.push({\n\t\t\t\t\t\tel:entry,\n\t\t\t\t\t\tselector:k,\n\t\t\t\t\t\tthreshold:val.threshold,\n\t\t\t\t\t\ttriggered:false\n\t\t\t\t\t});\n\n\t\t\t\t\tthis.observer.observe(entry);\n\t\t\t\t}\n\n\t\t\t});\n\t\t\tconsole.log(this.animatedRegions);\n\t\t\tconsole.log(regions);\n\n\t\t}\n\n\t}\n\tasync Start(initialState){\n\t\tthis.animationDone = false;\n\n\t\tthis.clearStyles(); //clear the styles and restart animatedElements\n\n\t\tconsole.log('Start!');\n\n\t\tconsole.log(initialState);\n\t\tfor (let n in initialState) { //for each grouping of initialized Elements\n\t\t\tlet element = initialState[n];\n\t\t\tlet selector = element.selector;\n\t\t\tlet selected = Array.from(document.querySelectorAll(selector)); //all elements selected\n\t\t\tconsole.log(selected);\n\n\t\t\tlet start_styles = element.style.trim().split(/;\\s?/);\n\t\t\tfor (let s of start_styles) { //for each starting style of the elements\n\t\t\t\tif (!s) continue;\n\t\t\t\tlet [style_prop, style_val] = s.split(/:\\s?/);\n\t\t\t\tstyle_prop = style_prop.toLowerCase();\n\t\t\t\tconsole.log(style_prop, style_val);\n\t\t\t\tfor (let el of selected) { //each selected element\n\t\t\t\t\tconsole.log(el);\n\n\t\t\t\t\tlet is_svg = el instanceof SVGElement; //will also include <svg></svg>\n\t\t\t\t\tlet svgprops = ['d', 'points', 'x', 'y', 'x1', 'y1', 'x2', 'y2', 'cx', 'cy', 'r', 'rx', 'ry', 'width', 'height','transform','stroke'];\n\t\t\t\t\t//not an exhaustive list of svg attributes that might be used\n\n\t\t\t\t\tif (style_prop === 'stroke-dashoffset' && is_svg) { //stroke-dashoffset is a special case, but we only care about going none to line fully drawn\n\t\t\t\t\t\tconsole.log('stroke-dashoffset');\n\t\t\t\t\t\tlet length = el.getTotalLength() + Number(el.getAttribute('stroke-width'));\n\t\t\t\t\t\tconsole.log(length);\n\t\t\t\t\t\tstyle_val = length;\n\t\t\t\t\t\tel.style.setProperty('stroke-dasharray', length + ' ' + length);\n\t\t\t\t\t} else if (style_prop === 'pie') { //set pie reveal start\n\t\t\t\t\t\tthis.startPie(el.id);\n\t\t\t\t\t\tlet angles = style_val.split(/\\s+/);\n\t\t\t\t\t\tthis.specialAnimations[el.id].startAngle = Number(angles[0]);\n\t\t\t\t\t\tthis.specialAnimations[el.id].endAngle = Number(angles[1]);\n\t\t\t\t\t\tconsole.log(el.id, angles[0], angles[1]);\n\t\t\t\t\t\tthis.setPie(el.id);\n\t\t\t\t\t}\n\t\t\t\t\t//setting SVG attributes here\n\t\t\t\t\tif (is_svg && el.tagName !== 'svg' && svgprops.includes(style_prop)) {\n\t\t\t\t\t\tlet original = `${style_prop}:${el.getAttribute(style_prop)}`; //preserve original\n\t\t\t\t\t\tel.setAttribute(style_prop, style_val);\n\t\t\t\t\t\tif (!this.specialAnimations[el.id]){\n\t\t\t\t\t\t\tthis.specialAnimations[el.id] = {original:[original]};\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tthis.specialAnimations[el.id].original.push(original);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconsole.log('specialAnimations', this.specialAnimations[el.id]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tel.style.setProperty(style_prop, style_val);\n\t\t\t\t\t}\n\t\t\t\t\tthis.initializedElements.push(el);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t}\n\tAnimate(regionname){\n\t\tconsole.log('Animate!', regionname);\n\t\tlet region = this.animatedRegions[regionname];\n\t\tif (!region) return;\n\t\tconsole.log(regionname, region);\n\n\t\tconsole.log(region.animationStep);\n\n\t\tif (region.animationStep > 0) {\n\t\t\tlet prevstep = region.steps[region.animationStep - 1];\n\t\t\tregion.animationDelay += this.cssTimeToMS((prevstep && prevstep.duration) || 0) + (prevstep && prevstep.offset ? this.cssTimeToMS(prevstep.offset) : 0);\n\t\t}\n\n\t\tif (region.steps.length) {\n\t\t\tlet commands = region.steps[region.animationStep];\n\t\t\tconsole.log(commands);\n\t\t\tlet elements = commands ? (commands.elements || []) : [];\n\t\t\tlet duration = commands ? this.cssTimeToMS(commands.duration) : 0;\n\t\t\tlet timing = commands ? (commands.timing || 'linear') : 'linear';\n\t\t\tlet stepoffset = commands && commands.offset ? this.cssTimeToMS(commands.offset) : 0;\n\n\t\t\tfor (var n in elements) {\n\t\t\t\tlet styles = this.stylestringToObj(elements[n].style, true) || {};\n\t\t\t\tconsole.log(styles);\n\t\t\t\tlet selector = elements[n].selector;\n\t\t\t\tlet el = elements[n];\n\n\t\t\t\t//let selected = Array.from(document.querySelectorAll(elements[n].selector));\n\t\t\t\tlet substeps = elements[n].substeps;\n\t\t\t\tconsole.log(selector);\n\n\t\t\t\t//animeJS\n\t\t\t\tif (!this.animatedElements[selector]) {\n\t\t\t\t\tthis.animatedElements[selector] = [];\n\t\t\t\t}\n\t\t\t\tlet step = {\n\t\t\t\t\tduration,\n\t\t\t\t\toffset: region.animationDelay + stepoffset, //absolute offset, kept here to be in the loop\n\t\t\t\t\teasing: timing,\n\t\t\t\t};\n\n\t\t\t\tif (substeps) { //substeps is for staggered delay animations\n\t\t\t\t\tstep.delay = (el, i, l) => i * duration / substeps;\n\t\t\t\t\tstep.duration = duration / substeps;\n\t\t\t\t}\n\n\t\t\t\tconsole.log(this.specialAnimations);\n\t\t\t\tif (styles['pie']) { //pie, because it's a special animation\n\t\t\t\t\tconsole.log('pie!', el.selector);\n\t\t\t\t\tlet pies = Array.from(document.querySelectorAll(el.selector));\n\t\t\t\t\tstep.targets = [];\n\t\t\t\t\tpies.forEach((p, n) => {\n\t\t\t\t\t\tlet id = p.id;\n\t\t\t\t\t\tconsole.log(id, this.specialAnimations[id]);\n\t\t\t\t\t\tstep.targets.push(this.specialAnimations[id]);\n\t\t\t\t\t});\n\t\t\t\t\tlet angles = styles['pie'].split(' ');\n\t\t\t\t\tstep.startAngle = Number(angles[0]);\n\t\t\t\t\tstep.endAngle = Number(angles[1]);\n\t\t\t\t\tconsole.log('startAngle', step.startAngle, 'endAngle', step.endAngle);\n\t\t\t\t\tstep.update = () => { //custom function for anime JS\n\t\t\t\t\t\tconsole.log('step.update', step.startAngle, step.endAngle);\n\t\t\t\t\t\tlet pies = Array.from(document.querySelectorAll(el.selector));\n\t\t\t\t\t\tpies.forEach((p) => {\n\t\t\t\t\t\t\tlet id = p.id;\n\t\t\t\t\t\t\tif (this.specialAnimations[id]) this.setPie(id);\n\t\t\t\t\t\t});\n\t\t\t\t\t};\n\t\t\t\t\tdelete styles['pie'];\n\t\t\t\t\tstep = Object.assign(step, styles);\n\t\t\t\t\tconsole.log(step);\n\t\t\t\t\tthis.animatedElements[selector].push(step);\n\t\t\t\t}\n\t\t\t\tfor (let s in styles) {\n\t\t\t\t\tconsole.log(styles[s]);\n\t\t\t\t\tif (styles[s] === 'original' && this.specialAnimations) { //this was for things drawn by generated svg\n\t\t\t\t\t\tconsole.log('ORIGINAL SVG!');\n\t\t\t\t\t\tlet selected = Array.from(document.querySelectorAll(elements[n].selector));\n\t\t\t\t\t\tselected.forEach((sel, n) => {\n\t\t\t\t\t\t\tlet id = sel.id;\n\t\t\t\t\t\t\tconsole.log(id);\n\t\t\t\t\t\t\tif (this.specialAnimations[id] && this.specialAnimations[id].original) {\n\t\t\t\t\t\t\t\tstyles[s] = this.specialAnimations[id].original;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tconsole.log(styles);\n\t\t\t\tstep = Object.assign(step, styles);\n\t\t\t\tthis.animatedElements[selector].push(step);\n\t\t\t}\n\t\t\tregion.animationStep++;\n\t\t\tconsole.log(region.animationStep, region.steps.length);\n\t\t\tconsole.log('step:', region.animationStep, 'total steps:', region.steps.length);\n\t\t\tif (region.animationStep < region.steps.length) {\n\t\t\t\tthis.Animate(regionname);\n\t\t\t} else if (region.animationStep === region.steps.length) { //prevent double animation\n\t\t\t\tthis.executeAnimationTimeline();\n\t\t\t} else {\n\t\t\t\tconsole.log('Not Animating step:', region.animationStep, 'total steps:', region.steps.length);\n\t\t\t}\n\t\t}\n\t}\n\texecuteAnimationTimeline(){\n\t\t//animeJS\n\t\tconsole.log('start anime timeline');\n\t\tlet timeline = anime.timeline({ complete: (anim) => this.animationDone = true });\n\n\t\tconsole.log(this.animatedElements);\n\t\tfor (let e in this.animatedElements) {\n\t\t\tlet selector_steps = this.animatedElements[e];\n\t\t\tconsole.log(selector_steps);\n\t\t\tfor (let s in selector_steps) {\n\t\t\t\tlet step = selector_steps[s];\n\t\t\t\tif (!step.targets) step.targets = e;\n\t\t\t\tconsole.log(step, step.offset);\n\t\t\t\ttry {\n\t\t\t\t\ttimeline = timeline.add(step, step.offset);\n\t\t\t\t} catch (ex) {\n\t\t\t\t\tconsole.log(ex.message);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tconsole.log(timeline);\n\t}\n\tcssTimeToMS(time){\n\t\tif (time && time.match(/s$/)) { //seconds\n\t\t\treturn parseFloat(time) * 1000;\n\t\t} else {\n\t\t\treturn parseInt(time);\n\t\t}\n\t}\n\tstylestringToObj(styles, camelCase){\n\t\tlet obj = {};\n\t\tif (typeof styles == 'string'){\n\t\t\tlet rules = styles.trim().split(/;\\s?/);\n\t\t\tfor(var r in rules){\n\t\t\t\tlet rule = rules[r];\n\t\t\t\tif (rule){\n\t\t\t\t\tlet parts = rule.split(/\\s?:\\s?/);\n\t\t\t\t\tconsole.log(parts);\n\t\t\t\t\tlet prop = parts[0].trim();\n\t\t\t\t\tif (camelCase) prop = this.toCamelCase(prop);\n\t\t\t\t\tif (parts.length === 2) obj[prop] = parts[1].trim();\n\t\t\t\t}\n\t\t\t}\n\t\t\tstyles = obj;\n\t\t}\n\t\treturn styles;\n\t}\n\ttoCamelCase(str){\n\t\treturn str.replace(/-([a-z])/g, g => g[1].toUpperCase());\n\t}\n\t//clear the style properties from elements\n\tclearStyles(){\n\t\tconsole.log('clearStyles animatedElements', this.animatedElements);\n\t\tfor(let sel in this.animatedElements){\n\t\t\tlet elements = Array.from(document.querySelectorAll(sel));\n\t\t\tfor(let el of elements){\n\t\t\t\tconsole.log('clearing', el);\n\t\t\t\tel.removeAttribute('style');\n\t\t\t}\n\t\t}\n\t\tthis.animatedElements = {};\n\n\t\tconsole.log('clearStyles initializedElements', this.initializedElements);\n\t\tfor (let el of this.initializedElements) {\n\t\t\tel.removeAttribute('style');\n\t\t}\n\n\t\tconsole.log('clearStyles specialAnimations', this.specialAnimations);\n\t\t//restore originals svg attributes\n\t\tfor(let id in this.specialAnimations){\n\t\t\tlet el = document.getElementById(id);\n\t\t\tif (this.specialAnimations[id] && this.specialAnimations[id].original){\n\t\t\t\tfor(let s of this.specialAnimations[id].original){\n\t\t\t\t\tlet [attr, val] = s.split(':');\n\t\t\t\t\tel.setAttribute(attr, val);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis.specialAnimations = {};\n\t}\n\t//setup for the \"pie\" animation\n\tstartPie(id){\n\t\tconsole.log('starting pie');\n\t\tlet element = document.getElementById(id);\n\t\tif (element) {\n\t\t\tlet  dims;\n\t\t\tlet is_svg = element instanceof SVGElement && element.tagName!=='svg';\n\t\t\tif (is_svg) {\n\t\t\t\tconsole.log('svg element');\n\t\t\t\tif (element.querySelector('clipPath')) {\n\t\t\t\t\tdims = element.querySelector('clipPath').getBBox();\n\t\t\t\t\t//TODO the parameter {stroke:true} whenever most browsers except parameters fro getBBox\n\t\t\t\t} else {\n\t\t\t\t\tdims = element.getBBox();\n\t\t\t\t}\n\n\t\t\t} else {\n\t\t\t\tconsole.log('not svg element');\n\t\t\t\tdims = element.getBoundingClientRect();\n\t\t\t}\n\n\t\t\tconsole.log('Dimensions', dims);\n\t\t\tlet width = dims.width;\n\t\t\tlet height = dims.height;\n\t\t\tif (is_svg && element.getAttribute('stroke-width')){ //because stroke-width throws off the real dimensions\n\t\t\t\twidth += Number(element.getAttribute('stroke-width'))*3;\n\t\t\t\theight += Number(element.getAttribute('stroke-width'))*3;\n\t\t\t}\n\t\t\tconsole.log('Width', width, 'Height',height);\n\t\t\tlet center = { x: width / 2, y: height / 2 };\n\t\t\tlet radius = Math.sqrt(Math.pow(center.x, 2) + Math.pow(center.y, 2));\n\n\n\t\t\tif (!this.specialAnimations[id]) this.specialAnimations[id] = {};\n\t\t\tconsole.log(center, radius);\n\t\t\tthis.specialAnimations[id].center = center;\n\t\t\tthis.specialAnimations[id].radius = radius;\n\t\t\tthis.specialAnimations[id].startAngle = 0;\n\t\t\tthis.specialAnimations[id].endAngle = 0;\n\t\t\tconsole.log('specialAnimations', id, this.specialAnimations);\n\t\t\t//arc\n\t\t\tlet path = this.drawPie(center.x, center.y, radius, 0, 0);\n\t\t\t//element.style.clipPath = `path('${path}')`;\n\t\t\telement.style.setProperty('clip-path', `path('${path}')`);\n\t\t\tconsole.log(element);\n\t\t}\n\t}\n\t//sets the values for the pie animation clip-path\n\tsetPie(id){\n\t\t//console.log('setPie');\n\t\tlet center = this.specialAnimations[id].center;\n\t\tlet radius = this.specialAnimations[id].radius;\n\t\tlet start = this.specialAnimations[id].startAngle;\n\t\tlet end = this.specialAnimations[id].endAngle;\n\t\t//console.log(id, start, end);\n\t\ttry {\n\t\t\tlet path = this.drawPie(center.x, center.y, radius, start, end);\n\t\t\tdocument.getElementById(id).style.setProperty('clip-path',`path('${path}')`);\n\t\t} catch (ex) {\n\t\t\tconsole.log(ex.message);\n\t\t}\n\t}\n\t//gets the values for the path properties for \"pie\" animation\n\tdrawPie(x, y, radius, startAngle, endAngle){\n\t\tvar arc = this.arcValues(x, y, radius, startAngle, endAngle);\n\n\t\tvar d = [\n\t\t\t\"M\", x, y,\n\t\t\t\"L\", arc.start.x, arc.start.y,\n\t\t\t\"A\", radius, radius, 0, arc.largeArcFlag, 1, arc.start2.x, arc.start2.y,\n\t\t\t\"A\", radius, radius, 0, arc.largeArcFlag, 1, arc.end.x, arc.end.y,\n\t\t\t\"Z\"\n\t\t].join(\" \");\n\t\t//console.log(startAngle, endAngle, d);\n\t\treturn d;\n\t}\n\t//does the calculation for an arc path in \"pie\" animation\n\tarcValues(x, y, radius, startAngle, endAngle){\n        if (startAngle > endAngle){\n            let tempAngle = startAngle;\n            startAngle = endAngle;\n            endAngle = tempAngle;\n        }\n        if (startAngle >= 360){\n            let times = Math.floor(startAngle/360);\n            startAngle -= times*360;\n            endAngle -= times*360;\n        }\n        let arcAngle = endAngle - startAngle;\n        if (arcAngle > 360){\n            let times = Math.floor(arcAngle/360);\n            endAngle -= times*360;\n            arcAngle -= times*360;\n        }\n\n        //half arcs needed because it won't draw 360\n        var start = this.polarToCartesian(x, y, radius, startAngle);\n        var start2 = this.polarToCartesian(x, y, radius, (endAngle+startAngle)/2);\n        var end = this.polarToCartesian(x, y, radius, endAngle > 360 ? endAngle-360 : endAngle);\n\n        var largeArcFlag = arcAngle/2 <= 180 ? \"0\" : \"1\";\n        return {start, start2, end, largeArcFlag};\n    }\n\t//converts polar to cartesian\n\tpolarToCartesian(centerX, centerY, radius, angleInDegrees) {\n        var angleInRadians = this.radians(angleInDegrees-90);\n\n        return {\n          x: centerX + (radius * Math.cos(angleInRadians)),\n          y: centerY + (radius * Math.sin(angleInRadians))\n        };\n    }\n\t//converts degree angles to radians\n\tradians(deg){\n        return deg * Math.PI / 180.0;\n    }\n\n}\n\n\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}